Index: src/main/ui/RecipeMaker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ui;\r\n\r\nimport model.Recipe;\r\nimport model.RecipeBook;\r\nimport org.json.JSONArray;\r\nimport persistance.JsonReader;\r\nimport persistance.JsonWriter;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class RecipeMaker {\r\n    private static final String JSON_STORE = \"./data/workroom.json\";\r\n    private RecipeBook rb;\r\n    private static final String SPECIFIC_MEAL_COMMAND = \"m\";\r\n    private static final String EDIT_COMMAND = \"e\";\r\n    private static final String GENERAL_MEAL_COMMAND = \"o\";\r\n    private static final String ERROR_MESSAGE = \"Sorry, this recipe is not in the recipe book. Please try again\";\r\n    private static final String VIEW_COMMAND = \"v\";\r\n    private boolean runMain;\r\n    private Scanner input;\r\n    private JsonWriter jsonWriter;\r\n    private JsonReader jsonReader;\r\n\r\n    public RecipeMaker() throws FileNotFoundException {\r\n        runRecipeMakerApp();\r\n    }\r\n\r\n    public void runRecipeMakerApp() {\r\n        System.out.println(\"What would you like to do today?\");\r\n        init();\r\n        String command;\r\n        printOptions();\r\n\r\n        while (runMain) {\r\n            if (input.hasNext()) {\r\n                command = input.nextLine();\r\n                command = fixCommandStyle(command);\r\n                analyzeInput(command);\r\n            }\r\n        }\r\n        System.out.println(\"Would you like to save your book? Type 'y' for yes\");\r\n        String s = input.nextLine();\r\n        if (s.equals(\"y\")) {\r\n            saveRecipeBook();\r\n        }\r\n        System.out.println(\"Thank you! Goodbye.\");\r\n    }\r\n\r\n    public void init() {\r\n        rb = new RecipeBook();\r\n        input = new Scanner(System.in);\r\n        runMain = true;\r\n        jsonWriter = new JsonWriter(JSON_STORE);\r\n        jsonReader = new JsonReader(JSON_STORE);\r\n\r\n    }\r\n\r\n    public String fixCommandStyle(String s) {\r\n        s = s.toLowerCase();\r\n        s = s.trim();\r\n        s = s.replaceAll(\"\\\"|'\", \"\");\r\n        return s;\r\n    }\r\n\r\n    public void printOptions() {\r\n        System.out.println(\"\\nTo make a  specific recipe, --> \" +  SPECIFIC_MEAL_COMMAND);\r\n        System.out.println(\"\\tFor a list of options, --> \" + GENERAL_MEAL_COMMAND);\r\n        System.out.println(\"\\tTo edit or add a recipe, --> \" + EDIT_COMMAND);\r\n        System.out.println(\"\\tTo view your entire recipe book, --> \" + VIEW_COMMAND);\r\n        System.out.println(\"\\tTo save recipe book to file, --> s\");\r\n        System.out.println(\"\\tTo load recipe book from file, --> l\");\r\n        System.out.println(\"\\tTo quit, --> \" + \"q\");\r\n    }\r\n\r\n    public void analyzeInput(String s) {\r\n        if (s.length() > 0) {\r\n            if (s.equals(SPECIFIC_MEAL_COMMAND)) {\r\n                handleMealCommand();\r\n            } else if (s.equals(GENERAL_MEAL_COMMAND)) {\r\n                handleOptionCommand();\r\n            } else if (s.equals(EDIT_COMMAND)) {\r\n                handleEditCommand();\r\n            } else if (s.equals(VIEW_COMMAND)) {\r\n                handleViewCommand();\r\n            } else if (s.equals(\"q\")) {\r\n                runMain = false;\r\n            } else if (s.equals(\"s\")) {\r\n                saveRecipeBook();\r\n                printOptions();\r\n            } else if (s.equals(\"l\")) {\r\n                loadRecipeBook();\r\n                printOptions();\r\n            } else {\r\n                System.out.println(\"Sorry, I did not understand the command. Try again\");\r\n                printOptions();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void handleViewCommand() {\r\n        System.out.println(rb.viewBook());\r\n        printOptions();\r\n    }\r\n\r\n    public void handleMealCommand() {\r\n        System.out.println(\"You have selected meal command, what would you like to make?\");\r\n        String recipe = input.nextLine();\r\n        if (rb.viewBook().contains(recipe)) {\r\n            System.out.println(\"Great! Here are the ingredients:\" + rb.makeRecipe(recipe));\r\n        } else {\r\n            System.out.println(ERROR_MESSAGE);\r\n        }\r\n        printOptions();\r\n    }\r\n\r\n    public void handleOptionCommand() {\r\n        System.out.println(\"You have selected option command\");\r\n        System.out.println(\"What would you like options based on? Type 't' for time or 'p' for ingredient preference\");\r\n        String newCommand = input.nextLine();\r\n        if (newCommand.equals(\"t\")) {\r\n            System.out.println(\"What is your time limit?\");\r\n            int time = input.nextInt();\r\n            System.out.println(rb.timeFor(time));\r\n        } else if (newCommand.equals(\"p\")) {\r\n            System.out.println(\"What ingredient would you like to be included?\");\r\n            String pref = input.nextLine();\r\n            System.out.println(rb.getFavourites(pref));\r\n        } else {\r\n            System.out.println(\"Sorry I do not understand this command. Please try again\");\r\n            handleOptionCommand();\r\n        }\r\n        printOptions();\r\n    }\r\n\r\n    public void handleEditCommand() {\r\n        System.out.println(\"You have selected edit command, would you like to add a recipe or edit an existing one?\");\r\n        System.out.println(\"Type 'a' to add and 'e' to edit\");\r\n        String s = input.nextLine();\r\n        if (s.equals(\"a\")) {\r\n            addRecipe();\r\n        } else if (s.equals(\"e\")) {\r\n            editRecipe();\r\n        } else {\r\n            System.out.println(\"Sorry, I did not understand the command. Try again\");\r\n            handleEditCommand();\r\n        }\r\n    }\r\n\r\n    public void addRecipe() {\r\n        String name;\r\n        int time;\r\n        System.out.println(\"What is the name of your recipe?\");\r\n        name = input.nextLine();\r\n        System.out.println(\"How much time does it take to make this meal? (in minutes)\");\r\n        time = input.nextInt();\r\n        Recipe recipe = new Recipe(name, time, new ArrayList<>());\r\n        rb.addRecipe(recipe);\r\n        System.out.println(\"What ingredients will you use? Type 'done' if done\");\r\n        input.nextLine();\r\n        addIngredients(recipe);\r\n    }\r\n\r\n    public void addIngredients(Recipe recipe) {\r\n        String ing = input.nextLine();\r\n        if (ing.equals(\"done\")) {\r\n            System.out.println(\"Great! We have added your recipe.\");\r\n            printOptions();\r\n        } else {\r\n            recipe.addIngredient(ing);\r\n            addIngredients(recipe);\r\n        }\r\n    }\r\n\r\n    public void editRecipe() {\r\n        String name;\r\n        Recipe recipe;\r\n        List<String> allRecipes = rb.viewBook();\r\n        System.out.println(\"What is the name of the recipe you would like to edit?\");\r\n        name = input.nextLine();\r\n        recipe = rb.getRecipe(name);\r\n        if (allRecipes.contains(name)) {\r\n\r\n            System.out.println(\"What would you like to edit?\");\r\n            System.out.println(\"Type 't' for cook time\");\r\n            System.out.println(\"Type 'i' for ingredients\");\r\n            changeRecipe(recipe, input.nextLine());\r\n\r\n        } else {\r\n            System.out.println(\"Sorry, that recipe does not exist. Please try again\");\r\n            printOptions();\r\n        }\r\n    }\r\n\r\n    public void changeRecipe(Recipe recipe, String command) {\r\n        if (command.equals(\"t\")) {\r\n            int time;\r\n            System.out.println(\"What time would you like to change it to?\");\r\n            time = input.nextInt();\r\n            recipe.changeTime(time);\r\n            System.out.println(\"Great! We have changed the cook time to \" + time + \" minutes\");\r\n            printOptions();\r\n        } else if (command.equals(\"i\")) {\r\n            System.out.println(\"Would ingredient would you like to add or remove?\");\r\n            String newIngredient;\r\n            newIngredient = input.nextLine();\r\n            System.out.println(\"Great! We have added the ingredient \" + newIngredient);\r\n            printOptions();\r\n            if (recipe.addIngredient(newIngredient)) {\r\n                recipe.addIngredient(newIngredient);\r\n            } else {\r\n                recipe.removeIngredient(newIngredient);\r\n            }\r\n        }\r\n    }\r\n\r\n    // EFFECTS: saves the recipe book to file\r\n    private void saveRecipeBook() {\r\n        try {\r\n            jsonWriter.open();\r\n            jsonWriter.write(rb);\r\n            jsonWriter.close();\r\n            System.out.println(\"Saved RecipeBook \" + \" to \" + JSON_STORE);\r\n        } catch (FileNotFoundException e) {\r\n            System.out.println(\"Unable to write to file: \" + JSON_STORE);\r\n        }\r\n    }\r\n\r\n    // EFFECTS: loads recipe book from file\r\n    private void loadRecipeBook() {\r\n        try {\r\n            rb = jsonReader.read();\r\n            System.out.println(\"Loaded RecipeBook\" + \" from \" + JSON_STORE);\r\n        } catch (IOException e) {\r\n            System.out.println(\"Unable to read from file: \" + JSON_STORE);\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/ui/RecipeMaker.java b/src/main/ui/RecipeMaker.java
--- a/src/main/ui/RecipeMaker.java	
+++ b/src/main/ui/RecipeMaker.java	
@@ -14,7 +14,7 @@
 
 
 public class RecipeMaker {
-    private static final String JSON_STORE = "./data/workroom.json";
+    private static final String JSON_STORE = "./data/recipebook.json";
     private RecipeBook rb;
     private static final String SPECIFIC_MEAL_COMMAND = "m";
     private static final String EDIT_COMMAND = "e";
